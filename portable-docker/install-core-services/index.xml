<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Install core services :: book.rymcg.tech</title>
    <link>https://book.rymcg.tech/portable-docker/install-core-services/index.html</link>
    <description> There are a few services you should consider installing before any others, which we will call core services:&#xA;Index Forgejo Traefik-Forward-Auth (sentry authorization) Postfix-Relay (MTA) </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://book.rymcg.tech/portable-docker/install-core-services/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Forgejo</title>
      <link>https://book.rymcg.tech/portable-docker/install-core-services/forgejo/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/portable-docker/install-core-services/forgejo/index.html</guid>
      <description>Forgejo is a self-hosted git forge similar to GitHub. Forgejo is a fork of Gitea, which is a fork of Gogs.&#xA;Installing Forgejo is useful for two unrelated purposes:&#xA;Self-hosting your own git repositories. Providing an OAuth2 identity service for your organization, facilitating single-sign on to all of your apps via Traefik’s forward-auth middleware. Forgejo is fundamental infrastructure You don’t need to install Forgejo on every server you make, but having at least one instance in your domain is recommended.</description>
    </item>
    <item>
      <title>Traefik-Forward-Auth (sentry authorization)</title>
      <link>https://book.rymcg.tech/portable-docker/install-core-services/traefik-forward-auth/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/portable-docker/install-core-services/traefik-forward-auth/index.html</guid>
      <description>--- title: Traefik Forward Auth --- graph LR; Start[Request...] --&amp;gt;|HTTP| Traefik Traefik --&amp;gt;|Sends the request to AuthServer| TFA[Traefik-Forward-Auth] TFA --&amp;gt;|Returns OK / KO| Traefik Traefik --&amp;gt;|If OK, proceed...| Proceed[...Access Granted] Traefik --&amp;gt;|If KO, returns the error| Start Sentry authorization Some apps may already have their own authentication mechanisms, while others may not. Sentry authorization creates a common authentication and authorization framework in front of your applications via Traefik middleware. Sentry authorization happens before any existing auth mechanisms in the app itself, and so it acts as a front door gatekeeper for your apps.</description>
    </item>
    <item>
      <title>Postfix-Relay (MTA)</title>
      <link>https://book.rymcg.tech/portable-docker/install-core-services/postfix-relay/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/portable-docker/install-core-services/postfix-relay/index.html</guid>
      <description>Many apps require to send email for various purposes. Rather than configure each such container with your secret mail credentials, you can configure a single central mail forwarding service with postfix-relay.&#xA;--- title: Authorized container networks may bridge with the Postfix-Relay to send outgoing email. --- graph TD; subgraph Docker network A[Container A] --&amp;gt;|private mail-only network| D[Postfix-Relay] B[Container B] --&amp;gt;|private mail-only network| D[Postfix-Relay] C[Container C] -.- F[Blocked] end D --&amp;gt;|Internet| E[Public SMTP server] E --&amp;gt; G[Allowed Email recipient] E --&amp;gt; H[Allowed Email recipient] E -.</description>
    </item>
  </channel>
</rss>