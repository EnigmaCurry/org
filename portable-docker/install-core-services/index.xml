<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Install core services :: book.rymcg.tech</title>
    <link>https://book.rymcg.tech/portable-docker/install-core-services/index.html</link>
    <description>There are a few services you should install before any others, which we will call core services:&#xA;Index Forgejo Traefik-Forward-Auth (Sentry Authorization) </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://book.rymcg.tech/portable-docker/install-core-services/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Forgejo</title>
      <link>https://book.rymcg.tech/portable-docker/install-core-services/forgejo/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/portable-docker/install-core-services/forgejo/index.html</guid>
      <description>Forgejo is a self-hosted git forge similar to GitHub. Forgejo is a fork of Gitea, which is a fork of Gogs. Installing Forgejo is useful for two unrelated purposes:&#xA;Self-hosting your own git repositories. Providing an OAuth2 identity service for your organization, facilitating single-sign on to all of your apps via Traefik forward-auth middleware (traefik-forward-auth). Forgejo is fundamental infrastructure You don’t need to install Forgejo on every server you make, but having at least one instance in your domain is recommended.</description>
    </item>
    <item>
      <title>Traefik-Forward-Auth (Sentry Authorization)</title>
      <link>https://book.rymcg.tech/portable-docker/install-core-services/traefik-forward-auth/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/portable-docker/install-core-services/traefik-forward-auth/index.html</guid>
      <description>Sentry Authorization Some apps may already have their own authentication mechanisms, while others may not. Sentry Authorization creates a common authentication and authorization framework in front of your applications via Traefik middleware. Sentry Authorization happens before any existing auth mechanisms in the app itself, and so it acts as a front door gatekeeper for your apps. It can’t control what users are allowed to do once they get in, but it does control who is allowed in through the front door.</description>
    </item>
  </channel>
</rss>