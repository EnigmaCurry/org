<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Self-hosting Docker with d.rymcg.tech on book.rymcg.tech</title>
    <link>https://book.rymcg.tech/d.rymcg.tech/index.html</link>
    <description>Recent content in Self-hosting Docker with d.rymcg.tech on book.rymcg.tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://book.rymcg.tech/d.rymcg.tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/introduction/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/introduction/index.html</guid>
      <description>What is self-hosting? Self-hosting is the practice of hosting network applications (web / internet / LAN / etc), using your own server hardware, or at least on virtual machines that you fundamentally control (ie. you have root access). As a preparedness skill, the self-hoster prioritizes the use of open source software, as it becomes an inalienable toolset to bootstrap infrastructure in the wilderness.
You can apply self-hosting a little bit, or a lot.</description>
    </item>
    <item>
      <title>Register a domain name</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/register-a-domain-name/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/register-a-domain-name/index.html</guid>
      <description>To host a web service, one of the first things you will need is to register your domain name. This will be the domain name used for all of your service links, and it is what your users will need to type into their browsers (or click on) to visit your pages.
Domain names are a scarce resource. Because of their scarcity, you must pay for your domain registrations, doing so in 1 year increments.</description>
    </item>
    <item>
      <title>Setup public DNS</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/setup-dns/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/setup-dns/index.html</guid>
      <description>A DNS server maps your domain (and subdomain) names to the various IP addresses of your servers. DNS is required for your users to be able to type your domain name prod.example.com and have it resolve to the IP address that is required to contact your Docker server.
Now that you have registered a domain name, you need to tell your registrar where your DNS server is. Usually you will use the DNS server that your cloud provider gives you, but you may choose any DNS provider you like.</description>
    </item>
    <item>
      <title>Create a public Docker server</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/public-docker-server/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/public-docker-server/index.html</guid>
      <description>This section will guide you to create your own public Docker server, using a DigitalOcean droplet as an example. In a similar fashion, you can install Docker on any cloud provider, or dedicated host that you prefer.
Choosing a VPS provider One of the most basic units of cloud computing is the Virtual Private Server (VPS). A VPS is a (Linux) virtual machine that is provisioned by a cloud service, and you are given root access to fully administer it, to install whatever you want on it.</description>
    </item>
    <item>
      <title>Install d.rymcg.tech tools</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/install-d-rymcg-tech/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/install-d-rymcg-tech/index.html</guid>
      <description>Install d.rymcg.tech and its dependencies on your workstation.
Install dependencies ## Fedora dnf install bash gettext openssl git xdg-utils jq sshfs curl inotify-tools httpd-tools make wireguard-tools## Debian apt-get install bash build-essential gettext git openssl apache2-utils xdg-utils jq sshfs wireguard curl inotify-tools## Arch Linux pacman -S bash base-devel gettext git openssl apache xdg-utils jq sshfs wireguard-tools curl inotify-toolsClone d.rymcg.tech repository git clone https://github.com/EnigmaCurry/d.rymcg.tech.git \ ${HOME}/git/vendor/enigmacurry/d.rymcg.tech cd ${HOME}/git/vendor/enigmacurry/d.rymcg.techSetup d.rymcg.tech command line tool You must edit your workstation user&amp;rsquo;s ~/.</description>
    </item>
    <item>
      <title>Main config for d.rymcg.tech</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/main-config-for-d.rymcg/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/main-config-for-d.rymcg/index.html</guid>
      <description>Each Docker context has a separate config file (.env_{CONTEXT}), stored in the root d.rymcg.tech directory (~/git/vendor/enigmacurry/d.rymcg.tech).
Choose your current Docker context d contextFor continuing our example, choose the prod context, or whatever you named your context.
Note hmm
Configure current Docker context d make - configThis will create a config file for your current Docker context, and name it .env_{CONTEXT} (eg. .env_prod). You must run this for each new Docker context you create, so that each context has its own config file.</description>
    </item>
    <item>
      <title>Install Traefik Proxy</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/install-traefik-proxy/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/install-traefik-proxy/index.html</guid>
      <description>Configure Traefik Proxy Run on your workstation:
d make traefik configThe configuration for Traefik is driven by a text wizard menu system.
? Traefik config main menu: &amp;gt; Create system user on Docker host Configure entrypoints (including dashboard) Configure Certificate Authorities (CA) Configure ACME (Let&amp;#39;s Encrypt or Step-CA) Configure TLS certificates and domains (make certs) Configure middleware (including auth) v Configure error page template [↑↓ to move, enter to select, type to filter, ESC to cancel]Use your arrow keys to select a menu item and press the Enter key.</description>
    </item>
  </channel>
</rss>