<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Step-CA :: book.rymcg.tech</title>
    <link>https://book.rymcg.tech/d.rymcg.tech/step-ca/index.html</link>
    <description>Step-CA is a secure, online, self-hosted Certificate Authority (CA). Its purpose is to issue (sign) X.509 (TLS) certificates, and to securely store the private key for the root CA. It can issue certificates manually using the step-cli tool, or Traefik can request them automatically via the ACME protocol.&#xA;Index Install Step-CA Create Certificates Configure TLS clients Change Root CA Passphrase ACME Mutual TLS </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://book.rymcg.tech/d.rymcg.tech/step-ca/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install Step-CA</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/step-ca/install/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/step-ca/install/index.html</guid>
      <description>Select your Docker context Running your own Certificate Authority should be a careful undertaking. Ideally, your Step-CA instance should run on its own dedicated Docker (virtual) machine. That way, it can stay up long term, as part of your personal cloud infrastructure, and not be tied to the lifecycle of any other application you run in your domain.&#xA;[bash]: Run this on your workstation: d context Install Minimal Traefik If you are creating a new Traefik instance, follow the Minimal Traefik install.</description>
    </item>
    <item>
      <title>Create Certificates</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/step-ca/certificates/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/step-ca/certificates/index.html</guid>
      <description>Setup step-cli Step-CA is strictly an API service, it has no user web interface. All interaction with Step-CA is done with the command line client step-cli, which you should install on your workstation, using your package manager, or according to those instructions.&#xA;Info Some packages install only the binary named step-cli. step-cli is just another name for step. However, most of the Step-CA documentation uses the step name in place of step-cli.</description>
    </item>
    <item>
      <title>Configure TLS clients</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/step-ca/tls-clients/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/step-ca/tls-clients/index.html</guid>
      <description>The certificates that Step-CA creates are untrusted by mainstream trust stores, both as part of your operating system, and separately by your web browser. Before clients can trust these certificates, you will need to add the CA certificate chain to each of their trust stores.&#xA;Here is the trust management document on the Arch Linux wiki. It is also applicable to most other Linux distributions. For other operating systems, you will need to consult their documentation for how you add root CA certificates.</description>
    </item>
    <item>
      <title>Change Root CA Passphrase</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/step-ca/root-ca-passphrase/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/step-ca/root-ca-passphrase/index.html</guid>
      <description>You must retain the manager passphrase in order to use the service. If you lose it, I don’t think there’s a way to get it back. However, you can change the password (assuming you still know the current one).&#xA;[bash]: Run this on your workstation: make change-password Info The change password script will ask you to enter two separate passwords.. Don’t get confused, it’s not asking for confirmation! The first question is asking for the OLD password (to decrypt), and the second questions is asking you for the NEW password (to encrypt).</description>
    </item>
    <item>
      <title>ACME</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/step-ca/acme/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/step-ca/acme/index.html</guid>
      <description>By default, Step-CA only configures the JWK provisioner, which basically means it’s limited to the manual certificate requests like make cert does.&#xA;ACME is an API that offers a more automatic process of requesting, issuing, and renewing TLS certificates. If you’re familiar with Let’s Encrypt, you’ve already been using ACME. Step-CA offers the same experience through this common API.&#xA;Enable ACME [bash]: Run this on your workstation: d make step-ca enable-acme In your Traefik instance, you will want to configure ACME to point to your Step-CA instance.</description>
    </item>
    <item>
      <title>Mutual TLS</title>
      <link>https://book.rymcg.tech/d.rymcg.tech/step-ca/mtls/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://book.rymcg.tech/d.rymcg.tech/step-ca/mtls/index.html</guid>
      <description>Enable mTLS in Trafeik config Traefik needs to install the root CA certificate in order to trust your client certificates.&#xA;In the d make traefik config menu, choose Configure Certificate Authorities (CA). You need to import your Step-CA root certificate into your Traefik container’s trust store. Choose one of the options that does this, and it will prompt you for the endpoint and fingerprint.&#xA;Endpoint: https://ca.example.com Fingerprint: get this by running make inspect-fingerprint in the step-ca project.</description>
    </item>
  </channel>
</rss>