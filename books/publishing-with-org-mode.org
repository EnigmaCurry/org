#+hugo_base_dir: ../hugo
#+hugo_section: /publishing-with-org-mode
#+hugo_weight: auto
#+STARTUP: align

* Publishing with org-mode, ox-hugo, and literate programming.
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :linkTitle Publishing with org-mode
:EXPORT_HUGO_WEIGHT: 900
:END:

This book describes how this site is written, in Org-mode, with
ox-hugo, and bits of Literate Programming.

* Dependencies
:PROPERTIES:
:EXPORT_FILE_NAME: dependencies
:END:

This site is built with:

- [[https://www.gnu.org/software/emacs/][Emacs]]
- [[https://orgmode.org/][Org-mode]]
- [[https://ox-hugo.scripter.co/][Ox-hugo]]
- [[https://gohugo.io][Hugo]] (extended edition)
- GitHub actions (also compatible with Gitea actions)

The GitHub/Gitea actions file includes all its dependencies
declaratively.

To build locally, you must install Emacs (29+), and hugo (v0.120+),
using your package manager, or by downloading directly from their
respective project pages. Please be aware that hugo has two editions:
[[https://gohugo.io/installation/linux/#editions][standard and extended]], and this build requires the extended edition
(TODO: verify this - I had some problems before - but maybe they are
resolved - I am still using the extended edition for now).

Read the [[/linux-workstation/emacs-on-fedora/index.html][Linux Workstation chapter for setting up Emacs]].

Please note that your package manager may container an old version of
Hugo that is incompatible with the Relearn theme. You can install the
/latest/ version of Hugo from the [[https://github.com/gohugoio/hugo/releases][Hugo GitHub releases page]].

For example, to download the X86_64 release of hugo =v0.123.8=:

: # Do this if your package manager installs an old incompatible version of Hugo:
:
: cd ~/Downloads
: wget https://github.com/gohugoio/hugo/releases/download/v0.123.8/hugo_extended_0.123.8_linux-amd64.tar.gz
: tar xfvz hugo_extended_0.123.8_linux-amd64.tar.gz
: sudo install hugo /usr/local/bin/hugo

You will also need to clone the git source of this website to your
workstation:

: git clone https://github.com/EnigmaCurry/org.git 
:    ~/git/vendor/enigmacurry/org

I always recommend to everyone, that you choose to use the
=~/git/vendor/ORG_NAME/REPO_NAME= path structure when cloning any git
repository (including your own!). This suggested path is a
vendor-neutral convention, useful for documentation purposes, and
which shouldn't conflict with any existing directory you might have.
Therefore the instructions should generally work on all machines. If
we all agree to use the same path, the instructions are much easier to
write, and read from! If you are adamant about cloning this elsewhere,
consider making a symlink from this path anyway (In this case,
=~/git/vendor/enigmacurry/org=).

* Building locally
:PROPERTIES:
:EXPORT_FILE_NAME: building-locally
:END:

Change into the directory where you cloned the source:

: cd ~/git/vendor/enigmacurry/org

Run the install method to download the theme:

: # This just downloads/installs the theme:
: make install

Build the site:

: # This builds the entire static site into the public/ directory:
: make build

Run the development server:

: # This builds the entire site, and then runs the live reload server:
: make serve

* Publishing with GitHub pages
:PROPERTIES:
:EXPORT_FILE_NAME: publish-with-github-pages
:END:

This site is automatically published to [[https://pages.github.com][GitHub Pages]] via the included
action file: [[https://github.com/EnigmaCurry/org/blob/ox-hugo/.github/workflows/deploy.yaml][.github/workflows/deploy.yaml]]. You can fork the
repository and enable the action to run on your behalf and publish to
your own site automatically, whenever you run =git push=.

* Publishing with SFTP
:PROPERTIES:
:EXPORT_FILE_NAME: publish-with-sftp
:END:

If you don't want to use GitHub pages, you can alternatively publish
to any webserver via SFTP.

To do so, you must install [[https://rclone.org/][Rclone]].

For example, on Fedora:

: # On Fedora atomic, make sure to do this in a toolbox container:
: sudo dnf install rclone

Once installed, you need to configure the remote SFTP server you want to publish to:

: rclone config

Follow the prompts to setup your SFTP remote, or you can see the
[[https://rclone.org/sftp/][example SFTP documentation]] for doing this. You must set all of the
following details:

 * The unique name of the remote (eg. =book=)
 * The hostname of the SFTP server (eg. =sftp.example.com=)
 * The SFTP username, password, or SSH key, and whether to use the SSH
   agent (recommended!)

The connection details are saved in your clone config file (eg.
=~/.config/rclone/rclone.conf=)

The included [[https://github.com/EnigmaCurry/org/blob/ox-hugo/Makefile][Makefile]] has a variable at the top called
=PUBLISH_RCLONE_REMOTE= (default =book=). Make sure this is the same
as the name of the rclone remote you configured (edit the Makefile if
it is not).

Once everything is configured, simply run =make publish= to publish
your site to the SFTP remote.

Your webserver document root needs to be configured to use the same
path that the SFTP server is configured for.

If you don't have a webserver or SFTP server, you can use the
following from d.rymcg.tech:

 * [[https://github.com/EnigmaCurry/d.rymcg.tech/tree/master/sftp#readme][SFTP server]]
 * [[https://github.com/EnigmaCurry/d.rymcg.tech/tree/master/nginx#readme][Nginx webserver]]

